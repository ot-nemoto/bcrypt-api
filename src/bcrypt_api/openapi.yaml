openapi: 3.1.0
info:
  title: openapi
  version: '1.0'
  summary: Bcrypt API
  description: bcryptでパスワードハッシュ化、パスワードとパスワードハッシュのチェックを行うAPI
  contact:
    name: ot-nemoto
    email: nemoto@opentone.co.jp
    url: 'https://github.com/ot-nemoto/bcrypt-api/issues'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:3000/api/v1/bcrypt'
paths:
  /generate-hash:
    post:
      summary: Create New User
      operationId: post-generate-hash
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  password:
                    type: string
                  hash:
                    type: string
                required:
                  - password
                  - hash
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                cost:
                  type: integer
                  default: 10
                  format: int32
                  minimum: 4
                  maximum: 10
              required:
                - password
            examples: {}
        description: ''
      description: Generate Hash.
    parameters: []
  /check-password:
    post:
      summary: ''
      operationId: post-check-password
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: boolean
                  password:
                    type: string
                  hash:
                    type: string
                required:
                  - result
                  - password
                  - hash
      description: Check Password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
                password:
                  type: string
              required:
                - hash
                - password
            examples: {}
components:
  schemas: {}
  securitySchemes: {}